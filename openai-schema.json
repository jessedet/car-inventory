{
  "name": "car_inventory_api",
  "description": "A comprehensive car inventory management API with CRUD operations",
  "parameters": {
    "type": "object",
    "properties": {
      "operation": {
        "type": "string",
        "enum": ["get_cars", "create_car", "update_car", "delete_car"],
        "description": "The operation to perform on the car inventory"
      },
      "filters": {
        "type": "object",
        "properties": {
          "make": {
            "type": "string",
            "description": "Filter cars by manufacturer (e.g., 'Toyota', 'Honda', 'Ford')"
          },
          "maxPrice": {
            "type": "number",
            "description": "Filter cars by maximum price"
          }
        },
        "description": "Optional filters for GET operations"
      },
      "car_data": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Car ID (required for update/delete operations)"
          },
          "make": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "Car manufacturer (required for create/update)"
          },
          "model": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "Car model (required for create/update)"
          },
          "year": {
            "type": "integer",
            "minimum": 1900,
            "maximum": 2025,
            "description": "Car year (required for create/update)"
          },
          "price": {
            "type": "number",
            "minimum": 0.01,
            "maximum": 1000000,
            "description": "Car price in USD (required for create/update)"
          },
          "quantity": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1000,
            "description": "Available quantity (required for create/update)"
          }
        },
        "description": "Car data for create/update operations"
      }
    },
    "required": ["operation"],
    "additionalProperties": false
  },
  "examples": [
    {
      "name": "get_all_cars",
      "description": "Get all cars in inventory",
      "parameters": {
        "operation": "get_cars"
      }
    },
    {
      "name": "get_toyota_cars",
      "description": "Get all Toyota cars",
      "parameters": {
        "operation": "get_cars",
        "filters": {
          "make": "Toyota"
        }
      }
    },
    {
      "name": "get_affordable_cars",
      "description": "Get cars under $30,000",
      "parameters": {
        "operation": "get_cars",
        "filters": {
          "maxPrice": 30000
        }
      }
    },
    {
      "name": "create_new_car",
      "description": "Add a new car to inventory",
      "parameters": {
        "operation": "create_car",
        "car_data": {
          "make": "Tesla",
          "model": "Model S",
          "year": 2024,
          "price": 75000,
          "quantity": 2
        }
      }
    },
    {
      "name": "update_car_price",
      "description": "Update car price and quantity",
      "parameters": {
        "operation": "update_car",
        "car_data": {
          "id": "car_id_here",
          "make": "BMW",
          "model": "X5",
          "year": 2022,
          "price": 58000,
          "quantity": 3
        }
      }
    },
    {
      "name": "delete_car",
      "description": "Remove a car from inventory",
      "parameters": {
        "operation": "delete_car",
        "car_data": {
          "id": "car_id_here"
        }
      }
    }
  ]
}
